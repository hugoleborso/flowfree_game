@startuml
title "Free Flow - Diagramme de Séquence - Onzième Action : connexion tuyau case valide avec Plot Rouge"
actor Utilisateur
boundary IHM
Utilisateur -> IHM : Clique sur la flèche de DROITE
IHM -> Controleur :action(DROITE) 
Controleur -> "t_rouge:Tuyau" : modifier(DROITE)
"t_rouge:Tuyau" -> "t_rouge:Tuyau" : récupération de la dernière case du tuyau : l4c0
"t_rouge:Tuyau" -> "l4c0:Case" :getCaseVoisine(DROITE)
"l4c0:Case" -> Plateau : getMaCaseVoisine(l4c0,DROITE)
Plateau --> "t_rouge:Tuyau" :l4c1(Case)
"t_rouge:Tuyau" -> "l4c1:Case" : accepteTuyau(t_rouge)
"l4c1:Case" ->"l4c1:Case" : récupération de son plot p_rouge
"l4c1:Case" -> "p_rouge:Plot" : accepteTuyau(t_rouge)
"p_rouge:Plot" -> "t_rouge:Tuyau" : getCouleur()
"t_rouge:Tuyau" -->"p_rouge:Plot" :  ROUGE
"p_rouge:Plot" -> "ROUGE: Couleur" : getCouleur()
"ROUGE: Couleur" --> "p_rouge:Plot" : ROUGE
"p_rouge:Plot" --> "l4c1:Case" : true
"l4c1:Case" -> "t_rouge:Tuyau" : estDansTuyau(l4c1)
"t_rouge:Tuyau"->"t_rouge:Tuyau" : caseTraverseesParTuyau.contains(l4c1)
"t_rouge:Tuyau"-->"l4c1:Case" :false
"l4c1:Case" -> "l4c1:Case" : setTuyau(t_rouge)
"l4c1:Case" -> "t_rouge:Tuyau" :ajouterCase(l4c1,true)
"t_rouge:Tuyau" -> "t_rouge:Tuyau" : caseTraverseeParTuyau.add(l4c1)
"t_rouge:Tuyau" -> "t_rouge:Tuyau" : setIsFinis(true)
"l4c1:Case" --> "t_rouge:Tuyau" : [true, true]
"t_rouge:Tuyau" --> Controleur : [true,false,true]
Controleur -> IHM : à l'écoute d'une nouvelle chose à faire
@enduml